name: CI/CD Pipeline - Unit Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Instala desde la ra√≠z si existe
        if [ -f requirements.txt ]; then 
          pip install -r requirements.txt
        # Si no, instala desde Python/ si existe
        elif [ -f Python/requirements.txt ]; then 
          pip install -r Python/requirements.txt
        # Si no existe ninguno, instala las dependencias manualmente
        else
          pip install opencv-python mediapipe scipy numpy flask flask-cors pillow
        fi
    
    - name: Run unit tests
      run: |
        cd Python
        python -m unittest discover -s Unit_test -p "*.py" -v
    
    - name: Generate coverage report (optional)
      if: matrix.python-version == '3.10'
      run: |
        pip install coverage
        cd Python
        coverage run -m unittest discover -s Unit_test -p "*.py"
        coverage report
        coverage xml
    
    - name: Upload coverage to Codecov (optional)
      if: matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./Python/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
